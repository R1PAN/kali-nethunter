#!/data/data/com.termux/files/usr/bin/bash -e

VERSION=kontol
BASE_URL=https://kali.download/nethunter-images/current/rootfs
USERNAME=kali




function ask() {
    # http://djm.me/ask
    while true; do

        if [ "${2:-}" = "Y" ]; then
            prompt="Y/n"
            default=Y
        elif [ "${2:-}" = "N" ]; then
            prompt="y/N"
            default=N
        else
            prompt="y/n"
            default=
        fi

        # Ask the question
        printf "${light_cyan}\n[?] "
        read -p "$1 [$prompt] " REPLY

        # Default?
        if [ -z "$REPLY" ]; then
            REPLY=$default
        fi

        printf "${reset}"

        # Check if the reply is valid
        case "$REPLY" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac
    done
}





    CHROOT=kali-arm64
    IMAGE_NAME=kalifs-arm64-minimal.tar.xz
    SHA_NAME=kalifs-arm64-minimal.sha512sum

function prepare_fs() {
    unset KEEP_CHROOT
    if [ -d ${CHROOT} ]; then
        if ask "Direktori kali-arm64 ditemukan. Hapus dan buat yang baru?
" "N"; then
            rm -rf ${CHROOT}
        else
            KEEP_CHROOT=1
        fi
    fi
} 

function cleanup() {
    if [ -f ${IMAGE_NAME} ]; then
        if ask "Hapus file  yang diunduh?" "N"; then
	    if [ -f ${IMAGE_NAME} ]; then
                rm -f ${IMAGE_NAME}
	    fi
	    if [ -f ${SHA_NAME} ]; then
                rm -f ${SHA_NAME}
	    fi
        fi
    fi
} 

function check_dependencies() {
    printf "${blue}\n[*] Checking package dependencies...${reset}\n"
    apt-get update -y &> /dev/null || apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confnew" dist-upgrade -y &> /dev/null
apt-get install wget -y
    for i in proot tar axel; do
        if [ -e $PREFIX/bin/$i ]; then
            echo "  $i is OK"
        else
            printf "Installing ${i}...\n"
            apt install -y $i || {
                printf "${red}ERROR: Failed to install packages.\n Exiting.\n${reset}"
	        exit
            }
        fi
    done
    apt upgrade -y
}


function get_url() {
    ROOTFS_URL="${BASE_URL}/${IMAGE_NAME}"
    SHA_URL="${BASE_URL}/${SHA_NAME}"
}

function get_rootfs() {
    unset KEEP_IMAGE
    if [ -f ${IMAGE_NAME} ]; then
        if ask "File gambar ditemukan. Hapus dan unduh yang baru?
" "N"; then
            rm -f ${IMAGE_NAME}
        else
            printf "${yellow}[!] Using existing rootfs archive${reset}\n"
            KEEP_IMAGE=1
            return
        fi
    fi
    printf "${blue}[*] Downloading rootfs...${red}\n\n"
    get_url
    wget ${EXTRA_ARGS} --continue "${ROOTFS_URL}"
}

function get_sha() {
    if [ -z $KEEP_IMAGE ]; then
        printf "\n${blue}[*] Getting SHA ... ${red}\n\n"
        get_url
        if [ -f ${SHA_NAME} ]; then
            rm -f ${SHA_NAME}
        fi
        wget ${EXTRA_ARGS} --continue "${SHA_URL}"
    fi
}

function verify_sha() {
    if [ -z $KEEP_IMAGE ]; then
        printf "\n${blue}[*] Verifying integrity of rootfs...${red}\n\n"
        sha512sum -c $SHA_NAME || {
            printf "${red} Rootfs corrupted. Please run this installer again or download the file manually\n${reset}"
            exit 1
        }
    fi
}

function extract_rootfs() {
    if [ -z $KEEP_CHROOT ]; then
        printf "\n${blue}[*] Extracting rootfs... ${reset}\n\n"
        proot --link2symlink tar -xf $IMAGE_NAME 2> /dev/null || :
    else        
        printf "${yellow}[!] Using existing rootfs directory${reset}\n"
    fi
}


function create_launcher() {
    NH_SHORTCUT=${PREFIX}/bin/nh
    cat > $NH_SHORTCUT <<- EOF
#!/data/data/com.termux/files/usr/bin/bash -e
cd \${HOME}
## termux-exec sets LD_PRELOAD so let's unset it before continuing
unset LD_PRELOAD
## Workaround for Libreoffice, also needs to bind a fake /proc/version
if [ ! -f $CHROOT/root/.version ]; then
    touch $CHROOT/root/.version
fi

## Default user is "kali"
user="$USERNAME"
home="/home/\$user"
start="sudo -u kali /bin/bash"

## NH can be launched as root with the "-r" cmd attribute
## Also check if user kali exists, if not start as root
if grep -q "kali" ${CHROOT}/etc/passwd; then
    KALIUSR="1";
else
    KALIUSR="0";
fi
if [[ \$KALIUSR == "0" || ("\$#" != "0" && ("\$1" == "-r" || "\$1" == "-R")) ]];then
    user="root"
    home="/\$user"
    start="/bin/bash --login"
    if [[ "\$#" != "0" && ("\$1" == "-r" || "\$1" == "-R") ]];then
        shift
    fi
fi

cmdline="proot \\
        --link2symlink \\
        -0 \\
        -r $CHROOT \\
        -b /dev \\
        -b /sdcard \\
        -b /proc \\
        -b $CHROOT\$home:/dev/shm \\
        -w \$home \\
           /usr/bin/env -i \\
           HOME=\$home \\
           PATH=/usr/local/sbin:/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin \\
           TERM=\$TERM \\
           LANG=C.UTF-8 \\
           \$start"

cmd="\$@"
if [ "\$#" == "0" ];then
    exec \$cmdline
else
    \$cmdline -c "\$cmd"
fi
EOF

    chmod 700 $NH_SHORTCUT
    if [ -L ${NH_SHORTCUT} ]; then
        rm -f ${NH_SHORTCUT}
    fi
    if [ ! -f ${NH_SHORTCUT} ]; then
        ln -s ${NH_SHORTCUT} ${NH_SHORTCUT} >/dev/null
    fi
   
}

function create_kex_launcher() {
    KEX_LAUNCHER=${CHROOT}/usr/bin/p
    cat > $KEX_LAUNCHER <<- EOF
#!/bin/bash

function start-kex() {
rm ~/.vnc/kali:1.log 2>/dev/null
    rm ~/.vnc/kali:2.log 2>/dev/null
    rm ~/.vnc/kali:1.pid 2>/dev/null
    rm ~/.vnc/kali:2.pid 2>/dev/null
    if [ ! -f ~/.vnc/passwd ]; then
        passwd-kex
    fi
    USR=\$(whoami)
    if [ \$USR == "root" ]; then
        SCREEN=":2"
    else
        SCREEN=":1"
    fi
    
    export HOME=\${HOME}; export USER=\${USR}; LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgcc_s.so.1 nohup vncserver \$SCREEN >/dev/null 2>&1 </dev/null
    starting_kex=1
    
    return 0
}

function stop-kex() {
  vncserver -kill :1 2>/dev/null
    vncserver -kill :2 2>/dev/null
    rm ~/.vnc/kali:1.log 2>/dev/null
    rm ~/.vnc/kali:2.log 2>/dev/null
    rm ~/.vnc/kali:1.pid 2>/dev/null
    rm ~/.vnc/kali:2.pid 2>/dev/null
    return $?
}

function passwd-kex() {
    vncpasswd
    return $?
}

function status-kex() {
    sessions=\$(vncserver -list | sed s/"TigerVNC"/"NetHunter KeX"/)
    if [[ \$sessions == *"590"* ]]; then
        printf "\n\${sessions}\n"
        printf "\nYou can use the KeX client to connect to any of these displays.\n\n"
    else
        if [ ! -z \$starting_kex ]; then
            printf '\nError starting the KeX server.\nPlease try "nethunter kex kill" or restart your termux session and try again.\n\n'
        fi
    fi
    return 0
}

function kill-kex() {
    pkill Xtigervnc
    rm ~/.vnc/kali:1.log 2>/dev/null
    rm ~/.vnc/kali:2.log 2>/dev/null
    rm ~/.vnc/kali:1.pid 2>/dev/null
    rm ~/.vnc/kali:2.pid 2>/dev/null
    return \$?
}

case \$1 in
    p)
        start-kex
        ;;
    s)
        stop-kex
        ;;
    status)
        status-kex
        ;;
    passwd)
        passwd-kex
        ;;
    kill)
        kill-kex
        ;;
    *)
        kill-kex
        start-kex
        status-kex
        ;;
esac
EOF

    chmod 700 $KEX_LAUNCHER
}

function fix_profile_bash() {
    ## Prevent attempt to create links in read only filesystem
    if [ -f ${CHROOT}/root/.bash_profile ]; then
        sed -i '/if/,/fi/d' "${CHROOT}/root/.bash_profile"
    fi
}

function fix_sudo() {
    ## fix sudo & su on start
    chmod +s $CHROOT/usr/bin/sudo
    chmod +s $CHROOT/usr/bin/su
	echo "kali    ALL=(ALL:ALL) ALL" > $CHROOT/etc/sudoers.d/kali

    # https://bugzilla.redhat.com/show_bug.cgi?id=1773148
    echo "Set disable_coredump false" > $CHROOT/etc/sudo.conf
}

function fix_uid() {
    ## Change kali uid and gid to match that of the termux user
    USRID=$(id -u)
    GRPID=$(id -g)
    nh -r usermod -u $USRID kali 2>/dev/null
    nh -r groupmod -g $GRPID kali 2>/dev/null
}




##################################
##              Main            ##

# Add some colours
red='\033[5;31m'
green='\033[5;33m'
yellow='\033[5;32m'
blue='\033[5;34m'
light_cyan='\033[5;96m'
reset='\033[0m'

EXTRA_ARGS=""
if [[ ! -z $1 ]]; then
    EXTRA_ARGS=$1
    if [[ $EXTRA_ARGS != "--no-check-certificate" ]]; then
        EXTRA_ARGS=""
    fi
fi

cd $HOME

prepare_fs
check_dependencies
get_rootfs
get_sha
verify_sha
extract_rootfs
create_launcher
cleanup

printf "\n${blue}[*] Configuring NetHunter for Termux ...\n"
fix_profile_bash
fix_sudo
create_kex_launcher
fix_uid


rm ~/kali-arm64/etc/apt/sources.list
#echo "deb https://http.kali.org/kali kali-rolling main contrib non-free non-free-firmware" >> ~/kali-arm64/etc/apt/sources.list
echo "deb https://ftp.debian.org/debian stable main contrib non-free non-free-firmware" >> ~/kali-arm64/etc/apt/sources.list
#echo "deb-src https://ftp.debian.org/debian stable main contrib non-free" >> ~/kali-arm64/etc/apt/sources.list
echo "deb https://mirror.primelink.net.id/kali kali-rolling main contrib non-free" >> ~/kali-arm64/etc/apt/sources.list
echo "nameserver 8.8.8.8" >> ~/kali-arm64/etc/resolv.conf
#nh -r apt-key adv --recv-keys --keyserver keyserver.ubuntu.com ED444FF07D8D0BF6


nh -r apt update
nh -r apt-get install git wget -y
#nh -r apt upgrade -y
nh -r sudo apt-get -f install
#nh -r apt-get install firefox-esr -y
nh -r apt install kali-themes dbus-x11 tigervnc-standalone-server -y
nh -r apt install xfce4 xfce4-terminal xfce4-whiskermenu-plugin -y
#nh -r apt autoremove -y

nh -r apt autoremove -y
nh -r apt update
nh -r dpkg-reconfigure tzdata
sleep 2
echo '#!/bin/sh
unset SESSION_MANAGER
unset DBUS_SESSION_BUS_ADDRESS
export SHELL=/bin/bash
startxfce4' >> ~/kali-arm64/home/kali/.vnc/xstartup
nh chmod +x .vnc/xstartup
nh -r apt install chromium -y
nh -r apt-get install firefox-esr -y
sleep 2
cat <<EOF > ~/kali-arm64/home/kali/Desktop/chromium.desktop
[Desktop Entry]
Version=1.0
Name=Browser Web Chromium
Exec=/usr/bin/chromium --no-sandbox %U
Terminal=false
X-MultipleArgs=false
Type=Application
Icon=chromium
Categories=Network;WebBrowser;
MimeType=text/html;text/xml;application/xhtml_xml;application/x-mimearchive;x-scheme-handler/http;x-scheme-handler/https;
StartupWMClass=chromium
StartupNotify=true
Keywords=browser
EOF

# Mengubah izin file
chmod u=rwx ~/kali-arm64/home/kali/Desktop/chromium.desktop

#!/bin/bash

# Membuat isi file .desktop dengan EOF
cat <<EOF > ~/kali-arm64/home/kali/Desktop/firefox-esr.desktop
[Desktop Entry]
Version=1.0
Name=Firefox ESR Web Browser
Exec=/usr/bin/firefox-esr %u
Terminal=false
X-MultipleArgs=false
Type=Application
Icon=firefox-esr
Categories=Network;WebBrowser;
MimeType=text/html;text/xml;application/xhtml_xml;application/x-mimearchive;x-scheme-handler/http;x-scheme-handler/https;
StartupWMClass=Firefox-esr
StartupNotify=true
Keywords=browser
EOF

# Mengubah izin file
chmod u=rwx ~/kali-arm64/home/kali/Desktop/firefox-esr.desktop
rm -rf kali-nethunter
clear
printf "\033[5;33m                  Nanti Atur² Sendiri Ya😄\n"
sleep 6
clear

printf "\e[5;34m╭─────────────────────────────────────────╮\n"
printf "\e[5;34m│\e[5;33m       Kali NetHunter for Termux         \e[5;34m│\n"
printf "\e[5;34m╰─────────────────────────────────────────╯\n"
printf "\e[6;34m      To start Kali NetHunter, type :⤦\e[0;m\n"
printf "\e[5;31m *\e[4;36m nh p passwd  \e[5;0m \e[5;33m▶ Set the KeX password\n"
printf "\e[5;31m *\e[4;36m nh p         \e[5;0m \e[5;33m▶ Start NetHunter GUI\n"
printf "\e[5;31m *\e[4;36m nh p s       \e[5;0m \e[5;33m▶ Stop NetHunter GUI\n"
printf "\e[5;31m *\e[4;36m nh -r        \e[5;0m \e[5;33m▶ Run NetHunter as root\n"
printf "\e[5;31m *\e[4;36m nh           \e[5;0m \e[5;33m▶ Shortcut for NetHunter\n"
printf "\e[5;34m╭─────────────────────────────────────────╮\n"

printf "\r"
printf "\e[5;0m \e[5;33m[+] Masukan Password untuk VNCSERVER\e[5;0m\n"
printf "\e[5;0m \e[5;33m[+] Ketikan (ctrl + z) Kalau Susah Keluar\e[5;0m\n"
printf "\e[5;34m╰─────────────────────────────────────────╯\n"

